name: Development

on:
  push:
    branches:
      - development
jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy Firebase Service Account Key
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebaseServiceAccount.json

      - name: Set Firebase Config
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=$FIREBASE_API_KEY" >> .env
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$FIREBASE_AUTH_DOMAIN" >> .env
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$FIREBASE_PROJECT_ID" >> .env
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$FIREBASE_STORAGE_BUCKET" >> .env
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=$FIREBASE_APP_ID" >> .env

      - name: Set Google Cloud Config
        env:
          GOOGLE_CLOUD_API_KEY: ${{ secrets.GOOGLE_CLOUD_API_KEY }}
          GOOGLE_CLOUD_MAP_ID: ${{ secrets.GOOGLE_CLOUD_MAP_ID }}
        run: |
          echo "NEXT_PUBLIC_GOOGLE_CLOUD_API_KEY=$GOOGLE_CLOUD_API_KEY" >> .env
          echo "NEXT_PUBLIC_GOOGLE_CLOUD_MAP_ID=$GOOGLE_CLOUD_MAP_ID" >> .env
